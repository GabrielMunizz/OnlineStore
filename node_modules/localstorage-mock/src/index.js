var localStorage = {};

/**
 * Items in storage
 */
localStorage.items = {};

/**
 * Number of items in storage
 */
localStorage.length = 0;

/**
 * Get item
 *
 * @param key
 * @returns {String|null}
 */
localStorage.getItem = function(key) {
  if (key === undefined) {
    throw new TypeError('1 argument required, but only 0 present.')
  }

  return localStorage.items.hasOwnProperty(key) ? localStorage.items[key] : null;
};

/**
 * Set item
 *
 * @param key
 * @param value
 */
localStorage.setItem = function(key, value) {
  if (arguments.length !== 2) {
    throw new TypeError(`2 arguments required, but only ${arguments.length} present.`);
  }

  localStorage.items[String(key)] = String(value);
  localStorage.length += 1;
};

/**
 * Clear the items in storage
 */
localStorage.clear = function() {
  localStorage.items = {};
  localStorage.length = 0;
};

/**
 * Make mock available globally
 */
global.localStorage = localStorage;

export default localStorage;